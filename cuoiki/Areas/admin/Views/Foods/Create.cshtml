@model cuoiki.Models.Food

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/admin/Views/Shared/_MyLayout.cshtml";
}

<h2>Thêm mới</h2>

@using (Html.BeginForm("Create", "Foods", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Món ăn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            Loại món ăn
            <div class="col-md-10">
                @Html.DropDownList("idTypeFood", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTypeFood, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Tên món ăn
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Giá
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Mô tả
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description)
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Meta
            <div class="col-md-10">
                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Ẩn
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.hide)
                    @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            Hình ảnh
            <div class="col-md-10">
                <br />
                <img id="preview" src="#" width="150" height="100" class="hidden" />
                <br />
                @Html.TextBox("fileImage", "", new { type = "file", accept = "image/*" })
                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại", "Index")
</div>
<script src="~/Areas/admin/Data/js/meta.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="~/Areas/admin/Data/ckfinder/ckfinder.js"></script>
<script src="~/Areas/admin/Data/ckeditor/ckeditor.js"></script>
<script type="text/javascript">
    var editor = CKEDITOR.replace("description");
    var editor = CKEDITOR.replace("description", { height: '600px' });
    customConfig: '/Areas/admin/Content/ckeditor/config.js';
</script>
<script>
    fileImage.onchange = evt => {

        const [file] = fileImage.files

        if (file) {

            preview.src = URL.createObjectURL(file);

            $("#preview").removeClass("hidden");

        }

    }
</script>